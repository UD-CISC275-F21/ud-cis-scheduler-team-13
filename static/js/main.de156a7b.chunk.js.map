{"version":3,"sources":["components/SemesterTable.tsx","components/AllSemestersTable.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SemesterTable","semesterName","creditLimit","courses","Container","Table","map","course","id","name","description","prereqs","AllSemestersTable","courses1","Row","Col","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAGO,SAASA,EAAT,GAGmC,IAHXC,EAGU,EAHVA,aAAcC,EAGJ,EAHIA,YAAaC,EAGjB,EAHiBA,QAKtD,OAAO,eAACC,EAAA,EAAD,WACH,+BACKH,EADL,mBACmCC,KAGnC,eAACG,EAAA,EAAD,WACI,gCACI,+BACI,oCAAW,sCAAa,6CAAoB,8CAGpD,gCACMF,EAAQG,KAAI,SAACC,GACX,OAAO,+BACH,6BAAKA,EAAOC,KACZ,6BAAKD,EAAOE,OACZ,6BAAKF,EAAOG,cACZ,6BAAKH,EAAOI,YAJAJ,EAAOC,e,oBCjBpC,SAASI,IACZ,IAAMT,EAAoB,CACtB,CAACK,GAAI,UAAWC,KAAM,uCAAwCC,YAAa,gBAAiBC,QAAS,CAAC,YACtG,CAACH,GAAI,UAAWC,KAAM,sCAAuCC,YAAa,gBAAiBC,QAAS,CAAC,YACrG,CAACH,GAAI,UAAWC,KAAM,sCAAuCC,YAAa,gBAAiBC,QAAS,CAAC,aAEnGE,EAAqB,CACvB,CAACL,GAAI,UAAWC,KAAM,qCAAsCC,YAAa,gBAAiBC,QAAS,IACnG,CAACH,GAAI,UAAWC,KAAM,kBAAmBC,YAAa,gBAAiBC,QAAS,CAAC,YACjF,CAACH,GAAI,UAAWC,KAAM,6CAA8CC,YAAa,gBAAiBC,QAAS,CAAC,aAEhH,OAAO,eAACP,EAAA,EAAD,WACH,eAACU,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAK,cAACf,EAAD,CAAeC,aAAa,OAAOC,YAAa,GAAIC,QAASU,MAClE,cAACE,EAAA,EAAD,UAAK,cAACf,EAAD,CAAeC,aAAa,SAASC,YAAa,GAAIC,QAASU,SAExE,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAK,cAACf,EAAD,CAAeC,aAAa,SAASC,YAAa,EAAGC,QAASA,MACnE,cAACY,EAAA,EAAD,UAAK,cAACf,EAAD,CAAeC,aAAa,SAASC,YAAa,EAAGC,QAASA,YCAhEa,MAhBf,WACI,OACI,sBAAKC,UAAU,MAAf,UACI,qBAAKA,UAAU,UAAf,SAGI,qDAIJ,qGACA,cAACL,EAAD,QCHGM,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.de156a7b.chunk.js","sourcesContent":["import { Course } from \"../interfaces/Course\";\nimport React, { Container, Table } from \"react-bootstrap\";\n\nexport function SemesterTable({semesterName, creditLimit, courses}: {\n        semesterName: string, \n        creditLimit: number,\n        courses: Course[]}): JSX.Element {\n\n    return <Container>\n        <h4>\n            {semesterName}, credit limit: {creditLimit}\n        </h4>\n        \n        <Table>\n            <thead>\n                <tr>\n                    <th>ID</th><th>Name</th><th>Description</th><th>Prereqs</th>\n                </tr>\n            </thead>\n            <tbody>\n                { courses.map((course: Course) => {\n                    return <tr key={course.id}>\n                        <td>{course.id}</td>\n                        <td>{course.name}</td>\n                        <td>{course.description}</td>\n                        <td>{course.prereqs}</td>\n                    </tr>;\n                })}\n            </tbody>\n        </Table>\n    </Container>;\n}","import { SemesterTable } from \"./SemesterTable\";\nimport React, { Container, Row, Col } from \"react-bootstrap\";\nimport { Course } from \"../interfaces/Course\";\n\nexport function AllSemestersTable(): JSX.Element {\n    const courses: Course[] = [\n        {id: \"CISC275\", name: \"Introduction to Software Engineering\", description: \"Description 1\", prereqs: [\"CISC220\"]},\n        {id: \"CISC181\", name: \"Introduction to Computer Science II\", description: \"Description 2\", prereqs: [\"CISC108\"]},\n        {id: \"CISC210\", name: \"Introduction to Systems Programming\", description: \"Description 3\", prereqs: [\"CISC108\"]}];\n\n    const courses1: Course[] = [\n        {id: \"CISC108\", name: \"Introduction to Computer Science I\", description: \"Description 1\", prereqs: []},\n        {id: \"CISC220\", name: \"Data Structures\", description: \"Description 2\", prereqs: [\"CISC210\"]},\n        {id: \"CISC260\", name: \"Machine Organization and Assembly Language\", description: \"Description 3\", prereqs: [\"CISC210\"]}];\n\n    return <Container>\n        <Row>\n            <Col><SemesterTable semesterName='Fall' creditLimit={21} courses={courses1}></SemesterTable></Col>\n            <Col><SemesterTable semesterName='Spring' creditLimit={21} courses={courses1}></SemesterTable></Col>\n        </Row>\n        <Row>\n            <Col><SemesterTable semesterName='Summer' creditLimit={7} courses={courses}></SemesterTable></Col>\n            <Col><SemesterTable semesterName='Winter' creditLimit={7} courses={courses}></SemesterTable></Col>\n        </Row>                \n    </Container>;\n}","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { AllSemestersTable } from \"./components/AllSemestersTable\";\n\n\nfunction App(): JSX.Element {\n    return (\n        <div className=\"App\">\n            <div className=\"top-bar\">\n\n                \n                <h1> UD CIS Scheduler</h1>\n                \n            </div>\n\n            <p> Welcome! To start creating your schedule, click on the boxes below.</p>\n            <AllSemestersTable></AllSemestersTable>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}